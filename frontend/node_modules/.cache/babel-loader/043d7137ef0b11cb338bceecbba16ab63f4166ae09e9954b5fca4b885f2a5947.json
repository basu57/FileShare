{"ast":null,"code":"import axios from'axios';// Create axios instance with base URL\nconst instance=axios.create({baseURL:'http://localhost:5000'});// Add a function to set auth token\nexport const setAuthToken=token=>{if(token){instance.defaults.headers.common['Authorization']=\"Bearer \".concat(token);localStorage.setItem('token',token);}else{delete instance.defaults.headers.common['Authorization'];localStorage.removeItem('token');}};// Add request interceptor to add token to all requests\ninstance.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Set initial token if it exists\nconst token=localStorage.getItem('token');if(token){setAuthToken(token);}export default instance;","map":{"version":3,"names":["axios","instance","create","baseURL","setAuthToken","token","defaults","headers","common","concat","localStorage","setItem","removeItem","interceptors","request","use","config","getItem","Authorization","error","Promise","reject"],"sources":["C:/Users/HP/Desktop/fileshare/frontend/src/utils/axios.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance with base URL\r\nconst instance = axios.create({\r\n  baseURL: 'http://localhost:5000'\r\n});\r\n\r\n// Add a function to set auth token\r\nexport const setAuthToken = (token) => {\r\n  if (token) {\r\n    instance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    localStorage.setItem('token', token);\r\n  } else {\r\n    delete instance.defaults.headers.common['Authorization'];\r\n    localStorage.removeItem('token');\r\n  }\r\n};\r\n\r\n// Add request interceptor to add token to all requests\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Set initial token if it exists\r\nconst token = localStorage.getItem('token');\r\nif (token) {\r\n  setAuthToken(token);\r\n}\r\n\r\nexport default instance;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,QAAQ,CAAGD,KAAK,CAACE,MAAM,CAAC,CAC5BC,OAAO,CAAE,uBACX,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAAC,YAAY,CAAIC,KAAK,EAAK,CACrC,GAAIA,KAAK,CAAE,CACTJ,QAAQ,CAACK,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,WAAAC,MAAA,CAAaJ,KAAK,CAAE,CACrEK,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEN,KAAK,CAAC,CACtC,CAAC,IAAM,CACL,MAAO,CAAAJ,QAAQ,CAACK,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,CACxDE,YAAY,CAACE,UAAU,CAAC,OAAO,CAAC,CAClC,CACF,CAAC,CAED;AACAX,QAAQ,CAACY,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,EAAK,CACV,KAAM,CAAAX,KAAK,CAAGK,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIZ,KAAK,CAAE,CACTW,MAAM,CAACT,OAAO,CAACW,aAAa,WAAAT,MAAA,CAAaJ,KAAK,CAAE,CAClD,CACA,MAAO,CAAAW,MAAM,CACf,CAAC,CACAG,KAAK,EAAK,CACT,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACA,KAAM,CAAAd,KAAK,CAAGK,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIZ,KAAK,CAAE,CACTD,YAAY,CAACC,KAAK,CAAC,CACrB,CAEA,cAAe,CAAAJ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
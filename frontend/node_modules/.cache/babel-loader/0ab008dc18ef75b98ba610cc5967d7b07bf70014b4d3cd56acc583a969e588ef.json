{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base URL\nconst instance = axios.create({\n  baseURL: 'http://localhost:5000'\n});\n\n// Add a function to set auth token\nexport const setAuthToken = token => {\n  if (token) {\n    instance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    localStorage.setItem('token', token);\n  } else {\n    delete instance.defaults.headers.common['Authorization'];\n    localStorage.removeItem('token');\n  }\n};\n\n// Add request interceptor to add token to all requests\ninstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Set initial token if it exists\nconst token = localStorage.getItem('token');\nif (token) {\n  setAuthToken(token);\n}\nexport default instance;","map":{"version":3,"names":["axios","instance","create","baseURL","setAuthToken","token","defaults","headers","common","localStorage","setItem","removeItem","interceptors","request","use","config","getItem","Authorization","error","Promise","reject"],"sources":["C:/Users/HP/Desktop/fileshare/client/src/utils/axios.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance with base URL\r\nconst instance = axios.create({\r\n  baseURL: 'http://localhost:5000'\r\n});\r\n\r\n// Add a function to set auth token\r\nexport const setAuthToken = (token) => {\r\n  if (token) {\r\n    instance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    localStorage.setItem('token', token);\r\n  } else {\r\n    delete instance.defaults.headers.common['Authorization'];\r\n    localStorage.removeItem('token');\r\n  }\r\n};\r\n\r\n// Add request interceptor to add token to all requests\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Set initial token if it exists\r\nconst token = localStorage.getItem('token');\r\nif (token) {\r\n  setAuthToken(token);\r\n}\r\n\r\nexport default instance;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EACrC,IAAIA,KAAK,EAAE;IACTJ,QAAQ,CAACK,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;IACrEI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;EACtC,CAAC,MAAM;IACL,OAAOJ,QAAQ,CAACK,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;IACxDC,YAAY,CAACE,UAAU,CAAC,OAAO,CAAC;EAClC;AACF,CAAC;;AAED;AACAV,QAAQ,CAACW,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAK;EACV,MAAMV,KAAK,GAAGI,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIX,KAAK,EAAE;IACTU,MAAM,CAACR,OAAO,CAACU,aAAa,GAAG,UAAUZ,KAAK,EAAE;EAClD;EACA,OAAOU,MAAM;AACf,CAAC,EACAG,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,MAAMb,KAAK,GAAGI,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC;AAC3C,IAAIX,KAAK,EAAE;EACTD,YAAY,CAACC,KAAK,CAAC;AACrB;AAEA,eAAeJ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import axios,{setAuthToken}from'../utils/axios';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[token,setToken]=useState(localStorage.getItem('token'));const[isAuthenticated,setIsAuthenticated]=useState(false);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Load user if token exists\nuseEffect(()=>{const loadUser=async()=>{try{if(token){setAuthToken(token);const res=await axios.get('/api/auth/me');setUser(res.data.data);setIsAuthenticated(true);}else{setAuthToken(null);setUser(null);setIsAuthenticated(false);}}catch(err){var _err$response,_err$response$data;console.error('Error loading user:',((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||err.message);setToken(null);setAuthToken(null);setUser(null);setIsAuthenticated(false);}finally{setLoading(false);}};loadUser();},[token]);// Refresh token on mount and when token changes\nuseEffect(()=>{const refreshToken=async()=>{try{if(token){setAuthToken(token);}}catch(err){console.error('Error refreshing token:',err);logout();}};refreshToken();},[token]);// Register user\nconst register=async userData=>{try{const res=await axios.post('/api/auth/register',userData);setError(null);return res.data;}catch(err){var _err$response2,_err$response2$data;setError(((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.message)||'Registration failed');throw err;}};// Verify OTP\nconst verifyOTP=async verifyData=>{try{const res=await axios.post('/api/auth/verify-otp',verifyData);const{token,user}=res.data;// Set token first\nsetToken(token);setAuthToken(token);// Then set other state\nsetUser(user);setIsAuthenticated(true);setError(null);return res.data;}catch(err){var _err$response3,_err$response3$data;setError(((_err$response3=err.response)===null||_err$response3===void 0?void 0:(_err$response3$data=_err$response3.data)===null||_err$response3$data===void 0?void 0:_err$response3$data.message)||'OTP verification failed');// Clear everything on verification failure\nsetToken(null);setAuthToken(null);setUser(null);setIsAuthenticated(false);throw err;}};// Resend OTP\nconst resendOTP=async email=>{try{const res=await axios.post('/api/auth/resend-otp',{email});return res.data;}catch(err){var _err$response4,_err$response4$data;setError(((_err$response4=err.response)===null||_err$response4===void 0?void 0:(_err$response4$data=_err$response4.data)===null||_err$response4$data===void 0?void 0:_err$response4$data.message)||'Failed to resend OTP');throw err;}};// Login user\nconst login=async loginData=>{try{const res=await axios.post('/api/auth/login',loginData);const{token,user}=res.data;// Set token first to ensure it's available for subsequent requests\nsetToken(token);setAuthToken(token);// Then set other state\nsetUser(user);setIsAuthenticated(true);setError(null);return res.data;}catch(err){var _err$response5,_err$response5$data;setError(((_err$response5=err.response)===null||_err$response5===void 0?void 0:(_err$response5$data=_err$response5.data)===null||_err$response5$data===void 0?void 0:_err$response5$data.message)||'Login failed');// Clear everything on login failure\nsetToken(null);setAuthToken(null);setUser(null);setIsAuthenticated(false);throw err;}};// Update user profile\nconst updateUser=updatedUserData=>{setUser({...user,...updatedUserData});};// Logout user\nconst logout=()=>{// Clear token first\nsetToken(null);setAuthToken(null);localStorage.removeItem('token');// Then clear other state\nsetUser(null);setIsAuthenticated(false);setError(null);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,token,isAuthenticated,loading,error,register,verifyOTP,resendOTP,login,updateUser,logout},children:children});};export default AuthContext;","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","setAuthToken","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","token","setToken","localStorage","getItem","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","loadUser","res","get","data","err","_err$response","_err$response$data","console","response","message","refreshToken","logout","register","userData","post","_err$response2","_err$response2$data","verifyOTP","verifyData","_err$response3","_err$response3$data","resendOTP","email","_err$response4","_err$response4$data","login","loginData","_err$response5","_err$response5$data","updateUser","updatedUserData","removeItem","Provider","value"],"sources":["C:/Users/HP/Desktop/fileshare/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios, { setAuthToken } from '../utils/axios';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load user if token exists\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        if (token) {\n          setAuthToken(token);\n          const res = await axios.get('/api/auth/me');\n          setUser(res.data.data);\n          setIsAuthenticated(true);\n        } else {\n          setAuthToken(null);\n          setUser(null);\n          setIsAuthenticated(false);\n        }\n      } catch (err) {\n        console.error('Error loading user:', err.response?.data?.message || err.message);\n        setToken(null);\n        setAuthToken(null);\n        setUser(null);\n        setIsAuthenticated(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadUser();\n  }, [token]);\n\n  // Refresh token on mount and when token changes\n  useEffect(() => {\n    const refreshToken = async () => {\n      try {\n        if (token) {\n          setAuthToken(token);\n        }\n      } catch (err) {\n        console.error('Error refreshing token:', err);\n        logout();\n      }\n    };\n\n    refreshToken();\n  }, [token]);\n\n  // Register user\n  const register = async (userData) => {\n    try {\n      const res = await axios.post('/api/auth/register', userData);\n      setError(null);\n      return res.data;\n    } catch (err) {\n      setError(err.response?.data?.message || 'Registration failed');\n      throw err;\n    }\n  };\n\n  // Verify OTP\n  const verifyOTP = async (verifyData) => {\n    try {\n      const res = await axios.post('/api/auth/verify-otp', verifyData);\n      const { token, user } = res.data;\n      \n      // Set token first\n      setToken(token);\n      setAuthToken(token);\n      \n      // Then set other state\n      setUser(user);\n      setIsAuthenticated(true);\n      setError(null);\n      \n      return res.data;\n    } catch (err) {\n      setError(err.response?.data?.message || 'OTP verification failed');\n      // Clear everything on verification failure\n      setToken(null);\n      setAuthToken(null);\n      setUser(null);\n      setIsAuthenticated(false);\n      throw err;\n    }\n  };\n\n  // Resend OTP\n  const resendOTP = async (email) => {\n    try {\n      const res = await axios.post('/api/auth/resend-otp', { email });\n      return res.data;\n    } catch (err) {\n      setError(err.response?.data?.message || 'Failed to resend OTP');\n      throw err;\n    }\n  };\n\n  // Login user\n  const login = async (loginData) => {\n    try {\n      const res = await axios.post('/api/auth/login', loginData);\n      const { token, user } = res.data;\n      \n      // Set token first to ensure it's available for subsequent requests\n      setToken(token);\n      setAuthToken(token);\n      \n      // Then set other state\n      setUser(user);\n      setIsAuthenticated(true);\n      setError(null);\n      \n      return res.data;\n    } catch (err) {\n      setError(err.response?.data?.message || 'Login failed');\n      // Clear everything on login failure\n      setToken(null);\n      setAuthToken(null);\n      setUser(null);\n      setIsAuthenticated(false);\n      throw err;\n    }\n  };\n\n  // Update user profile\n  const updateUser = (updatedUserData) => {\n    setUser({ ...user, ...updatedUserData });\n  };\n\n  // Logout user\n  const logout = () => {\n    // Clear token first\n    setToken(null);\n    setAuthToken(null);\n    localStorage.removeItem('token');\n    \n    // Then clear other state\n    setUser(null);\n    setIsAuthenticated(false);\n    setError(null);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        token,\n        isAuthenticated,\n        loading,\n        error,\n        register,\n        verifyOTP,\n        resendOTP,\n        login,\n        updateUser,\n        logout\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}